@using MVC.project.ViewModels.MakeViewModels
@using ZaPrav.NetCore
@using ZaPrav.NetCore.VehicleDB
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model Paging<MakeViewModel>;
<h1>Vehicle Make table</h1>
<form asp-action="VehicleMake" method="get" >
    <div class="form-actions no-color">
        <p>
            Find by name or abrv:
            <input type="text" name="SearchStringMade" value="@ViewBag.CurrentSearchMake" />
            <input type= "hidden" name="sortOrderMades" value="@ViewBag.SortingMadeHelper.CurrentSort" /> 
            <input type="submit" value="Search" class="btn btn-primary" /> |
            @*<a asp-page="./Index">Back to full List</a>*@
        </p>
    </div>
</form> 
<form method = "post">
    <table class = "table">
        <thead>
            <tr>
                <th>
                    <a 
                        asp-action="VehicleMake" 
                        asp-route-sortOrderMades="@ViewBag.SortingMadeHelper.IdSort"
                        asp-route-currentFilterMade="@ViewBag.CurrentSearchMake">
                        @Html.DisplayNameFor(model => model[0].Id)
                    </a>
                </th>
                <th>
                    <a 
                        asp-action="VehicleMake" 
                        asp-route-sortOrderMades="@ViewBag.SortingMadeHelper.NameSort"
                        asp-route-currentFilterMade="@ViewBag.CurrentSearchMake">
                        @Html.DisplayNameFor(model => model[0].Name)
                    </a>
                </th>
                <th>
                    <a 
                        asp-action="VehicleMake" 
                        asp-route-sortOrderMades="@ViewBag.SortingMadeHelper.AbrvSort"
                        asp-route-currentFilterMade="@ViewBag.CurrentSearchMake">
                        @Html.DisplayNameFor(model => model[0].Abrv)
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>          
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Name</td>
                <td>@item.Abrv</td>
                <td>
                    <button 
                        type ="submit" 
                        formmethod="get" 
                        asp-action="UpdateMake" 
                        asp-route-id = "@item.Id">Update
                    </button>       
                    
                    <button 
                        type ="submit"                    
                        asp-action="Delete" 
                        asp-route-id = "@item.Id"
                        >Delete
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
    
    @{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
    <a asp-action="VehicleMake"
       asp-route-sortOrderMades="@ViewBag.SortingMadeHelper.CurrentSort"
       asp-route-pageIndexMade="@(Model.PageIndex - 1)"
       asp-route-currentFilterMade="@ViewBag.CurrentSearchMake"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-action="VehicleMake"
       asp-route-sortOrderMades="@ViewBag.SortingMadeHelper.CurrentSort"
       asp-route-pageIndexMade="@(Model.PageIndex + 1)"
       asp-route-currentFilterMade="@ViewBag.CurrentSearchMake"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
</form>

<form method = "get">

    <button 
        style="margin-top: 10px" 
        asp-action="CreateMake">Create
    </button>

    <button 
        style="margin-top: 10px" 
        asp-controller="Model" 
        asp-action="VehicleModel">View Vehicle Models
    </button>

</form>
